services:
  nextjs-app:
    container_name: nextjs-container
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.next-server.rule=Host(`localhost`)
      - traefik.http.services.next-server.loadbalancer.server.port=3000

  reverse-proxy:
    image: "traefik:v3.3.1"
    command:
      #      - '--log.level=DEBUG'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      #      - '--certificatesresolvers.myresolver.acme.tlschallenge=true'
      #      - '--certificatesresolvers.myresolver.acme.email=postmaster@example.com'
      #      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
      - '--entryPoints.web.address=:80'
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

#  socket-server:
#    image: websocket-server:1.0
#    labels:
#      - traefik.enable=true
#      - traefik.http.routers.socket-server.rule=Host(`localhost`)
#      - traefik.http.services.socket-server.loadbalancer.server.port=8080
#    command: java -jar server.jar

#  turn-server:
#    image: coturn/coturn:4.6.3-alpine3.21
#    network_mode: "host"
#    command:
#      - '--log-file=stdout'
#      - '--external-ip=${}'
#      - '--min-port=49160'
#      - '--max-port=49200'
#      - '--fingerprint'
#      - '--lt-cred-mech'
#      - '--realm=localhost'
#      - '--user=user1:password'
